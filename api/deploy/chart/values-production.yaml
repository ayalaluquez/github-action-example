global:
  # enabled is the master enabled switch. Setting this to true or false
  # will enable or disable all the components within this chart by default.
  enabled: true
  # Used to define custom django.fullname in template.
  projectName: "wakingup-api-v2"
  # image sets the repo,tag and pullPolicy of the project
  image:
    repository: "103144140553.dkr.ecr.us-west-2.amazonaws.com/wakingup-api"
    tag: latest
    pullPolicy: Always
  # Namespace where release will be deployed
  namespace: "wakingup-prd"

  datadog:
    enabled: false

  # True if external secrets should be used
  externalSecrets:
    enabled: false

  # Run DB migrations at deploy?
  migrations:
    enabled: true

api:
  # True if you want to enable api deployment.
  enabled: true

  annotations:
    ad.datadoghq.com/wakingup-api.logs: '[{"source":"wakingup-api","service":"api"}]'

  # set this to the name of the secret created when externalSecrets is disabled
  varsSecretName: "api"

  replicaCount: 5

  resources:
    requests:
      memory: 3Gi
      cpu: 1
    limits:
      memory: 3Gi
      cpu: 2
  # Used to define custom readinessProbe settings
  readinessProbe:
    enabled: true

  livenessProbe:
    enabled: true

  # extraEnvironmentVars is a list of extra enviroment variables to set with the stateful set. These could be
  # used to include variables required for auto-unseal.
  extraEnvironmentVars: {}
    # GOOGLE_REGION: global
    # GOOGLE_PROJECT: myproject

  # extraSecretEnvironmentVars is a list of extra enviroment variables to set with the stateful set.
  # These variables take value from existing Secret objects.
  extraSecretEnvironmentVars: []
    # - envName: AWS_SECRET_ACCESS_KEY
    #   secretName: project
    #   secretKey: AWS_SECRET_ACCESS_KEY

  # Affinity Settings for api pods
  # This should be a multi-line string matching the affinity section of a
  # PodSpec.
  affinity: null

  # Toleration Settings for api pods
  # This should be a multi-line string matching the Toleration array
  # in a PodSpec.
  tolerations: null

  # nodeSelector labels for server pod assignment, formatted as a muli-line string.
  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  # Example:
  # nodeSelector: |
  #   environment: qa
  nodeSelector: {}

  autoscaling:
    enabled: true
    minReplicas: 5
    maxReplicas: 100
    targetCPUUtilizationPercentage: 50
    targetMemoryUtilizationPercentage: 50

  terminationGracePeriodSeconds: 300

  ingress:
    enabled: true
    ingressClassName: public-nlb
    annotations: |
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
      nginx.ingress.kubernetes.io/proxy-body-size: 400m
      ingress.kubernetes.io/client-body-timeout: "1800"
      ingress.kubernetes.io/proxy-body-size: "120m"
      ingress.kubernetes.io/proxy-buffer-size: "2048k"
      ingress.kubernetes.io/proxy-connect-timeout: "1800"
      ingress.kubernetes.io/proxy-read-timeout: "1800"
      ingress.kubernetes.io/proxy-send-timeout: "1800"
      ingress.kubernetes.io/upstream-fail-timeout: "1800"
      ingress.kubernetes.io/upstream-max-fails: "1800"
    hosts:
      - host: api.wakingup.com
        paths:
          - /
      - host: api-v2.wakingup.com
        paths:
          - /
      - host: api-cf.wakingup.com
        paths:
          - /

    tls:
      hosts:
        - api.wakingup.com
        - api-cf.wakingup.com
        - api-v2.wakingup.com

  # Enables a headless service to be used by
  service:
    enabled: true

    # Port on which API server is listening
    port: 8080
    # Target port to which the service should be mapped to
    targetPort: 8080

background:
  # True if you want to enable api deployment.
  enabled: true

  annotations:
    ad.datadoghq.com/wakingup-background.logs: '[{"source":"wakingup-api","service":"background"}]'

  # set this to the name of the secret created when externalSecrets is disabled
  varsSecretName: "background"

  replicaCount: 7

  resources:
    requests:
      memory: 3Gi
      cpu: 1
    limits:
      memory: 3Gi
      cpu: 2

  # Used to define custom readinessProbe settings
  readinessProbe:
    enabled: true

  livenessProbe:
    enabled: true

  # extraEnvironmentVars is a list of extra enviroment variables to set with the stateful set. These could be
  # used to include variables required for auto-unseal.
  extraEnvironmentVars: {}
    # GOOGLE_REGION: global
    # GOOGLE_PROJECT: myproject
    # GOOGLE_APPLICATION_CREDENTIALS: /vault/userconfig/myproject/myproject-creds.json

  # extraSecretEnvironmentVars is a list of extra enviroment variables to set with the stateful set.
  # These variables take value from existing Secret objects.
  extraSecretEnvironmentVars: []
    # - envName: AWS_SECRET_ACCESS_KEY
    #   secretName: vault
    #   secretKey: AWS_SECRET_ACCESS_KEY

  # extraVolumes is a list of extra volumes to mount. These will be exposed
  # to Vault in the path `/vault/userconfig/<name>/`. The value below is
  # an array of objects, examples are shown below.
  extraVolumes: []
    # - type: secret (or "configMap")
    #   name: my-secret
    #   path: null # default is `/vault/userconfig`

  # Affinity Settings for api pods
  # This should be a multi-line string matching the affinity section of a
  # PodSpec.
  affinity: null

  # Toleration Settings for api pods
  # This should be a multi-line string matching the Toleration array
  # in a PodSpec.
  tolerations: null

  # nodeSelector labels for server pod assignment, formatted as a muli-line string.
  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  # Example:
  # nodeSelector: |
  #   environment: qa
  nodeSelector: {}

  autoscaling:
    enabled: true
    minReplicas: 7
    maxReplicas: 25
    targetCPUUtilizationPercentage: 50
    targetMemoryUtilizationPercentage: 50

  terminationGracePeriodSeconds: 300

  # Enables a headless service to be used by
  service:
    enabled: true

    # Port on which server is listening
    port: 8083
    # Target port to which the service should be mapped to
    targetPort: 8083


cron:
  # True if you want to enable api deployment.
  enabled: true

  annotations:
    ad.datadoghq.com/wakingup-cron.logs: '[{"source":"wakingup-api","service":"cron"}]'

  # set this to the name of the secret created when externalSecrets is disabled
  varsSecretName: "cron"

  resources:
    requests:
      memory: 2Gi
      cpu: 1
    limits:
      memory: 2Gi
      cpu: 1500m

  # Used to define custom readinessProbe settings
  readinessProbe:
    enabled: true

  livenessProbe:
    enabled: true

  # extraEnvironmentVars is a list of extra enviroment variables to set with the stateful set. These could be
  # used to include variables required for auto-unseal.
  extraEnvironmentVars:
    # GOOGLE_PROJECT: myproject

  # extraSecretEnvironmentVars is a list of extra enviroment variables to set with the stateful set.
  # These variables take value from existing Secret objects.
  extraSecretEnvironmentVars: []
    # - envName: AWS_SECRET_ACCESS_KEY
    #   secretName: project
    #   secretKey: AWS_SECRET_ACCESS_KEY

  # Affinity Settings for api pods
  # This should be a multi-line string matching the affinity section of a
  # PodSpec.
  affinity: null

  # Toleration Settings for api pods
  # This should be a multi-line string matching the Toleration array
  # in a PodSpec.
  tolerations: null

  # nodeSelector labels for server pod assignment, formatted as a muli-line string.
  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  # Example:
  # nodeSelector: |
  #   environment: qa
  nodeSelector: {}

  terminationGracePeriodSeconds: 300

  # Enables a headless service to be used by
  service:
    enabled: false
    # Port on which server is listening
    port: 8082
    # Target port to which the service should be mapped to
    targetPort: 8082


webhooks:
  # True if you want to enable api deployment.
  enabled: true

  annotations:
    ad.datadoghq.com/wakingup-webhooks.logs: '[{"source":"wakingup-api","service":"webhooks"}]'

  # set this to the name of the secret created when externalSecrets is disabled
  varsSecretName: "webhooks"

  replicaCount: 5

  resources:
    requests:
      memory: 3Gi
      cpu: 1
    limits:
      memory: 3Gi
      cpu: 2

  # Used to define custom readinessProbe settings
  readinessProbe:
    enabled: true

  livenessProbe:
    enabled: true

  # extraEnvironmentVars is a list of extra enviroment variables to set with the stateful set. These could be
  # used to include variables required for auto-unseal.
  extraEnvironmentVars:
    # GOOGLE_PROJECT: myproject

  # extraSecretEnvironmentVars is a list of extra enviroment variables to set with the stateful set.
  # These variables take value from existing Secret objects.
  extraSecretEnvironmentVars: []
    # - envName: AWS_SECRET_ACCESS_KEY
    #   secretName: project
    #   secretKey: AWS_SECRET_ACCESS_KEY

  # Affinity Settings for api pods
  # This should be a multi-line string matching the affinity section of a
  # PodSpec.
  affinity: null

  # Toleration Settings for api pods
  # This should be a multi-line string matching the Toleration array
  # in a PodSpec.
  tolerations: null

  # nodeSelector labels for server pod assignment, formatted as a muli-line string.
  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  # Example:
  # nodeSelector: |
  #   environment: qa
  nodeSelector: {}

  autoscaling:
    enabled: true
    minReplicas: 5
    maxReplicas: 100
    targetCPUUtilizationPercentage: 50
    targetMemoryUtilizationPercentage: 50

  terminationGracePeriodSeconds: 300

  ingress:
    enabled: true
    ingressClassName: public-nlb
    annotations: |
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
      nginx.ingress.kubernetes.io/proxy-body-size: 400m
      ingress.kubernetes.io/client-body-timeout: "1800"
      ingress.kubernetes.io/proxy-body-size: "120m"
      ingress.kubernetes.io/proxy-buffer-size: "2048k"
      ingress.kubernetes.io/proxy-connect-timeout: "1800"
      ingress.kubernetes.io/proxy-read-timeout: "1800"
      ingress.kubernetes.io/proxy-send-timeout: "1800"
      ingress.kubernetes.io/upstream-fail-timeout: "1800"
      ingress.kubernetes.io/upstream-max-fails: "1800"
    hosts:
      - host: webhooks.wakingup.com
        paths:
          - /

    tls:
      hosts:
        - webhooks.wakingup.com

  # Enables a headless service to be used by
  service:
    enabled: true
    # Port on which server is listening
    port: 8081
    # Target port to which the service should be mapped to
    targetPort: 8081
